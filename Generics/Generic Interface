interface IRepository<T>
{
  List<T> GetList();
  T Get(int id);
  void Add(T entity);
  void Update(T entity);
  void Delete(T entity);
}

interface ICustomerDal : IRepository<Customer>
{
  void CustomMethod();
}

interface IProductDal : IRepository<Product>
{
}

class CustomerDal : ICustomerDal
{
  public void Add(Customer entity){
    throw new NotImplementedException();
  }
  public void Update(Customer entity){
    throw new NotImplementedException();
  }
  public void Delete(Customer entity){
    throw new NotImplementedException();
  }
  public void Get(int id){
    throw new NotImplementedException();
  }
  public void CustomMethod(){
    throw new NotImplementedException();
  }
}

class ProductDal : IProductDal
{
  public void Add(Product entity){
    throw new NotImplementedException();
  }
  public void Update(Product entity){
    throw new NotImplementedException();
  }
  public void Delete(Product entity){
    throw new NotImplementedException();
  }
  public void Get(int id){
    throw new NotImplementedException();
  }
}
